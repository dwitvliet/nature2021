import os



path = '/path/to/objs/'
obj_dir = 'objs'
obj_dir_smoothed = obj_dir + '_smoothed'


objs = [f for f in sorted(os.listdir(os.path.join(path, obj_dir))) if f.endswith('.obj')]

#objs = objs[:10]
#print objs


parameters = {
    'n': len(objs),
    'objs_rough_file': 'zbrush_objs_rough_list.txt',
    'objs_smooth_file': 'zbrush_objs_smooth_list.txt',
    'dynamesh_resolution': 256,
    'dynamesh_blur': 0
}

if 'Dataset6' in path or 'Dataset2' in path or 'Dataset3' in path:
    parameters['dynamesh_resolution'] = 128
if 'Dataset1' in path or 'Dataset4' in path:
    parameters['dynamesh_resolution'] = 64
if 'Dataset5' in path:
    parameters['dynamesh_resolution'] = 32


polish = False
polish_by_feature = 50
allow_shrinking = False






if not os.path.exists(os.path.join(path, obj_dir_smoothed)):
    os.mkdir(os.path.join(path, obj_dir_smoothed))



if polish:
    parameters['polish'] = '[ISet,Tool:Deformation:Polish,{}]'.format(int(polish))
if polish_by_feature:
    parameters['polish'] = '''[IModSet,Tool:Deformation:Polish By Features,{}]
      [ISet,Tool:Deformation:Polish By Features,{}]'''.format(int(allow_shrinking), int(polish_by_feature))


zscript = '''
[VarDef,infilelist({n}),""]
[VarDef,outfilelist({n}),""]
[VarDef,filename,""]

[IButton,SmoothObjects,"Smooth Objects",
  [VarSet,infilefile,"{objs_rough_file}"]
  [VarSet,outfilefile,"{objs_smooth_file}"]

  [If,[MemGetSize,L_filereadmem],[MemDelete,L_filereadmem]] //delete the memblock if its around
  [If,[FileExists,infilefile],
    [MemCreateFromFile,L_filereadmem,infilefile]  //create a memory block from the file
    [VarSet,offset,0]
    [Loop,{n},
      [VarSet,nrbytesread,[MemReadString,L_filereadmem,filename,offset,1]] //read the line into filename, store nrbytesread
      [VarSet,infilelist(n),[Var,filename]] //assign to the list variable
      [VarAdd,offset,nrbytesread] //increase the offset for next read
      [If,offset >= [MemGetSize,L_filereadmem],[LoopExit]] //exit if we''ve reached the end of the block
    ,n]
     [MemDelete,L_filereadmem] //delete the memblock as we''ve finished with it
  ]

  [If,[MemGetSize,L_filereadmem],[MemDelete,L_filereadmem]] //delete the memblock if its around
  [If,[FileExists,outfilefile],
    [MemCreateFromFile,L_filereadmem,outfilefile]  //create a memory block from the file
    [VarSet,offset,0]
    [Loop,{n},
      [VarSet,nrbytesread,[MemReadString,L_filereadmem,filename,offset,1]] //read the line into filename, store nrbytesread
      [VarSet,outfilelist(n),[Var,filename]] //assign to the list variable
      [VarAdd,offset,nrbytesread] //increase the offset for next read
      [If,offset >= [MemGetSize,L_filereadmem],[LoopExit]] //exit if we''ve reached the end of the block
    ,n]
     [MemDelete,L_filereadmem] //delete the memblock as we''ve finished with it
  ]

  //now load the files
  [Loop,{n},
    //[MessageOK, [FileNameResolvePath, infilelist(n)]]
    [If,[FileExists,infilelist(n)],
      [FileNameSetNext,infilelist(n)]
      [IPress,Tool:Import]
      [CanvasStroke,(ZObjStrokeV02n35=H23DV10DH23DV111H23DV114H23DV115H23CV117H23CV118H23CV119H23CV11AH23CV11BH23CV11EH23CV126H23CV127H23CV129H23CV12BH23CV12DH23CV12FH23BV131H23BV133H23BV134H23BV136H23BV138H23BV13AH23BV13BH23AV13DH23AV13EH23AV140H23AV141H23AV142H239V142H239V143H239V144H239V145H239V146H239V147H239V147)]
      [IPress,Transform:Edit]
      [IPress,Transform:Fit]
      [ISet,Tool:Geometry:Resolution,{dynamesh_resolution}]
      [ISet,Tool:Geometry:Blur,{dynamesh_blur}]
      [IPress,Tool:Geometry:DynaMesh]
      [FileNameSetNext,outfilelist(n)]
      [IPress,Tool:Export]
      [IUnPress,Tool:Geometry:DynaMesh]
    ]
  ,n]
  [Loop,{n},
    [If,[FileExists,outfilelist(n)],
      [FileNameSetNext,outfilelist(n)]
      [IPress,Tool:Import]
      [CanvasStroke,(ZObjStrokeV02n35=H23DV10DH23DV111H23DV114H23DV115H23CV117H23CV118H23CV119H23CV11AH23CV11BH23CV11EH23CV126H23CV127H23CV129H23CV12BH23CV12DH23CV12FH23BV131H23BV133H23BV134H23BV136H23BV138H23BV13AH23BV13BH23AV13DH23AV13EH23AV140H23AV141H23AV142H239V142H239V143H239V144H239V145H239V146H239V147H239V147)]
      [IPress,Transform:Edit]
      [IPress,Transform:Fit]
      [IPress,Tool:Geometry:Divide]
      {polish}
      [FileNameSetNext,outfilelist(n)]
      [IPress,Tool:Export]
      [IUnPress,Tool:Geometry:DynaMesh]
    ]
  ,n]
]
'''.format(**parameters)

with open(os.path.join(path, 'zbrush_script.txt'), 'w') as f:
    f.write(zscript)

with open(os.path.join(path, parameters['objs_rough_file']), 'w') as f:
    for obj in objs:
        f.write(obj_dir + '\\' + obj + '\n')

with open(os.path.join(path, parameters['objs_smooth_file']), 'w') as f:
    for obj in objs:
        f.write(obj_dir_smoothed + '\\' + obj + '\n')

#Under Zscript/Load, open "zbrush_script.txt" generated by this script
#Press H to show loaded scripts
#Click the button "SmoothObjects" and wait for processing
